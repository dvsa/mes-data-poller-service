USE tarsreplica;
CREATE OR REPLACE VIEW WORK_SCHEDULE_SLOTS AS
SELECT ps.slot_id, DATE(p.programme_date) as programme_date, ps.start_time, ps.minutes,
    ps.individual_id, ps.tc_id, ps.vst_code, ps.non_test_activity_code,
    IFNULL(es.end_date, '4000-01-01') as examiner_end_date, ps.deployed_to_from_code
FROM PROGRAMME p
JOIN PROGRAMME_SLOT ps
    ON ps.programme_date = p.programme_date
    AND ps.individual_id = p.individual_id
    AND ps.tc_id = p.tc_id
JOIN EXAMINER e on e.individual_id = p.individual_id
JOIN EXAMINER_STATUS es on es.individual_id = e.individual_id
WHERE ps.tc_closed_ind != 1
AND IFNULL(ps.deployed_to_from_code, 0) != 1
AND IFNULL(e.grade_code, 'ZZZ') != 'DELE'
AND (ps.not_bookable_ind = 0 or ps.state_code = 2)
AND (
    p.state_code NOT IN (2, 3)
    OR EXISTS
        (
        SELECT book.booking_id
        FROM BOOKING book
        JOIN PROGRAMME_SLOT slot on slot.slot_id = book.slot_id
        WHERE slot.programme_date = p.programme_date
        AND slot.individual_id = p.individual_id
        AND slot.tc_id = p.tc_id
        AND book.state_code = 1
        )
    );

CREATE OR REPLACE VIEW V_STANDARDS_CHECKS AS
SELECT
    INDIVIDUAL_ID,
    CHECK_TEST_ID,
    APPLICATION_ID,
    BOOKING_ID,
    TEST_HISTORY_ID,
    REGISTER_ID,
    BOOKING_CONFIRMED,
    INVITATION_DATE,
    DATE_TEST,
    TIME_TEST,
    DATE_TIME_TEST,
    SE_ID,
    RESULT,
    LAST_CHECK_TEST_DATE,
    SE_NAME,
    REGISTER_CODE,
    ACTUAL_REGISTER_CODE,
    PRN,
    RESULT_DESC,
    REG_LAST_CTD,
    ON_ROAD,
    OFF_ROAD,
    ORGANISATION_NAME,
    ORGANISATION_ID,
    BRN,
    ORGANISATION_REGISTER_ID,
    BOOKING_CANCEL_REASON_CODE,
    TEST_UPDATED_ON
FROM (
         SELECT
             REG.INDIVIDUAL_ID,
             NULL AS CHECK_TEST_ID,
             APP.APP_ID AS APPLICATION_ID,
             B.BOOKING_ID AS BOOKING_ID,
             TH.HISTORY_ID AS TEST_HISTORY_ID,
             REG.REGISTER_ID,
             CASE WHEN PS.GHOST_IND = 1 THEN 0 ELSE 1 END AS BOOKING_CONFIRMED,
             DATE_FORMAT(B.CREATED_ON, '%d/%m/%Y') AS INVITATION_DATE,
             DATE(TH.DATE_OF_TEST) AS DATE_TEST,
     DATE_FORMAT(TH.DATE_OF_TEST, '%H:%i') AS TIME_TEST,
     DATE_FORMAT(TH.DATE_OF_TEST, '%Y-%m-%d %H:%i') AS DATE_TIME_TEST,
     NULL AS SE_ID,
     TH.RESULT_CODE AS RESULT,
     NULL AS LAST_CHECK_TEST_DATE,
     CONCAT(EXAM_IND.FIRST_FORENAME, ' ', EXAM_IND.FAMILY_NAME) AS SE_NAME,
     REG_CODE_REF.ITEM_DESC1 AS REGISTER_CODE,
     REG.REGISTER_CODE AS ACTUAL_REGISTER_CODE,
     REG.PRN,
     IFNULL(
             CASE
                 WHEN TH.MARK IS NOT NULL THEN CONCAT(TRG.GRADE_DESC, ' ', TH.MARK, '/', TRG.MAX_RESULT)
                 WHEN TH.RESULT_CODE = 3157 OR TH.RESULT_CODE = 3158 THEN (
                     SELECT
                         CASE INITIATOR_CODE
                             WHEN 'DSA' THEN 'DVSA Cancelled'
                             WHEN 'Act of nature' THEN 'Act of Nature Cancelled'
                             WHEN 'Candidate' THEN 'Candidate Cancelled'
                             ELSE INITIATOR_CODE
                             END
                     FROM BOOKING_CANCELLATION_REASON
                     WHERE BOOKING_CANCEL_REASON_CODE = B.BOOKING_CANCEL_REASON_CODE
                 )
                 ELSE RESULT_CODE.ITEM_DESC1
                 END, RESULT_CODE.ITEM_DESC1
         ) AS RESULT_DESC,
     DATE_FORMAT(REG.LAST_CHECK_TEST_DATE, '%d/%m/%Y') AS REG_LAST_CTD,
     NULL AS ON_ROAD,
     NULL AS OFF_ROAD,
     ORG.ORGANISATION_NAME,
     ORG.ORGANISATION_ID,
     OREG.BRN,
     OREG.ORGANISATION_REGISTER_ID,
     B.BOOKING_CANCEL_REASON_CODE,
     TH.UPDATED_ON AS TEST_UPDATED_ON
    FROM
        REGISTER REG
        INNER JOIN APPLICATION APP ON APP.INDIVIDUAL_ID = REG.INDIVIDUAL_ID
    INNER JOIN REF_DATA_ITEM_MASTER REG_CODE_REF ON REG_CODE_REF.ITEM_ID = REG.REGISTER_CODE
    INNER JOIN BOOKING B ON B.APP_ID = APP.APP_ID
    INNER JOIN TEST_HISTORY TH ON TH.INDIVIDUAL_ID = REG.INDIVIDUAL_ID AND TH.APPLICATION_ID = APP.APP_ID AND TH.BOOKING_ID = B.BOOKING_ID and TH.REGISTER_ID = REG.REGISTER_ID
    LEFT OUTER JOIN ORGANISATION ORG ON ORG.ORGANISATION_ID = REG.ORGANISATION_ID
    LEFT OUTER JOIN ORGANISATION_REGISTER OREG ON OREG.ORGANISATION_ID = ORG.ORGANISATION_ID AND OREG.REGISTER_CODE = REG.REGISTER_CODE
    LEFT OUTER JOIN PROGRAMME_SLOT PS ON PS.SLOT_ID = B.SLOT_ID and B.SLOT_ID IS NOT NULL
    LEFT OUTER JOIN INDIVIDUAL EXAM_IND ON EXAM_IND.INDIVIDUAL_ID = PS.INDIVIDUAL_ID AND TH.DATE_OF_TEST = PS.START_TIME
    LEFT OUTER JOIN TEST_RESULT_GRADE TRG ON TRG.GRADE_ID = TH.GRADE_ID
    LEFT OUTER JOIN REF_DATA_ITEM_MASTER RESULT_CODE ON RESULT_CODE.ITEM_ID = TH.RESULT_CODE
WHERE
    REG.REGISTER_CODE <> 1418 and TH.EXAM_TYPE_CODE NOT IN (2097,2098,834)
UNION ALL
SELECT
    REG.INDIVIDUAL_ID,
    CHK.CHECK_TEST_ID,
    NULL AS APPLICATION_ID,
    NULL AS BOOKING_ID,
    NULL AS TEST_HISTORY_ID,
    CHK.REGISTER_ID,
    CHK.BOOKING_CONFIRMED,
    DATE_FORMAT(CHK.INVITATION_DATE, '%d/%m/%Y') AS INVITATION_DATE,
    CHK.DATE_TEST AS DATE_TEST,
    CHK.TIME_TEST,
    CASE
        WHEN CHK.DATE_TEST IS NULL THEN NULL
        ELSE DATE_FORMAT(CONCAT(CHK.DATE_TEST, ' ', CHK.TIME_TEST), '%Y-%m-%d %H:%i')
        END AS DATE_TIME_TEST,
    CHK.SE_ID,
    CHK.RESULT,
    DATE_FORMAT(CHK.CHECK_TEST_DATE, '%d/%m/%Y') AS LAST_CHECK_TEST_DATE,
    SE.SE_NAME,
    REG_CODE_REF.ITEM_DESC1 AS REGISTER_CODE,
    REG.REGISTER_CODE AS ACTUAL_REGISTER_CODE,
    REG.PRN,
    RESULT_DESC_REF.ITEM_DESC1 AS RESULT_DESC,
    DATE_FORMAT(REG.LAST_CHECK_TEST_DATE, '%d/%m/%Y') AS REG_LAST_CTD,
    CHK.ON_ROAD,
    CHK.OFF_ROAD,
    ORG.ORGANISATION_NAME,
    ORG.ORGANISATION_ID,
    OREG.BRN,
    OREG.ORGANISATION_REGISTER_ID,
    NULL AS BOOKING_CANCEL_REASON_CODE,
    CHK.UPDATED_ON AS TEST_UPDATED_ON
FROM
    CHECK_TEST CHK
        INNER JOIN REGISTER REG ON REG.REGISTER_ID = CHK.REGISTER_ID
        LEFT OUTER JOIN SUPERVISING_EXAMINERS SE ON SE.SE_ID = CHK.SE_ID
        LEFT OUTER JOIN REF_DATA_ITEM_MASTER REG_CODE_REF ON REG_CODE_REF.ITEM_ID = REG.REGISTER_CODE
        LEFT OUTER JOIN REF_DATA_ITEM_MASTER RESULT_DESC_REF ON RESULT_DESC_REF.ITEM_ID = CHK.RESULT
        LEFT OUTER JOIN ORGANISATION ORG ON ORG.ORGANISATION_ID = REG.ORGANISATION_ID
        LEFT OUTER JOIN ORGANISATION_REGISTER OREG ON OREG.ORGANISATION_ID = ORG.ORGANISATION_ID AND OREG.REGISTER_CODE = REG.REGISTER_CODE
WHERE
        REG.REGISTER_CODE <> 1418
    ) VSC
WHERE VSC.ORGANISATION_REGISTER_ID IS NULL
   OR VSC.ORGANISATION_REGISTER_ID = (SELECT MAX(ORG_REG.ORGANISATION_REGISTER_ID)
    FROM ORGANISATION_REGISTER ORG_REG
    WHERE ORG_REG.ORGANISATION_ID = VSC.ORGANISATION_ID
  AND ORG_REG.REGISTER_CODE = VSC.ACTUAL_REGISTER_CODE);
